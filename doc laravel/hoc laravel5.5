https://laravel.com/docs/5.5/authentication
https://laravel.com/docs/5.5/passport
https://viblo.asia/p/laravel-passport-JQVGVZKyGyd

https://appdividend.com/2017/08/31/laravel-5-5-reactjs-tutorial/


http://krissanawat.com/2017/09/22/create-simple-rest-api-laravel-5-5-passport/
https://www.itechempires.com/2017/09/laravel-5-5-api-user-authentication-passport-package/

https://allaravel.com/laravel-tutorials/khoa-hoc-laravel-5-mien-phi/

https://allaravel.com/category/tutorials/vuejs-framework/
https://allaravel.com/laravel-tutorials/xay-dung-ung-dung-crud-su-dung-vue-js-trong-laravel/
https://allaravel.com/tutorials/vuejs-framework/mo-phong-hoat-dong-cua-thuoc-tinh-computed-trong-vue-js-bang-javascript/
https://allaravel.com/laravel-tutorials/laravel-ket-hop-voi-vue-js-tao-ra-ung-dung-web-tuyet-voi/
https://allaravel.com/category/tutorials/vuejs-framework/

http://www.laravelinterviewquestions.com/2017/10/simple-crud-app-in-laravel-5-5-and-vue-js.html#sthash.yjJHiJbr.dpbs

https://allaravel.com/laravel-tutorials/su-dung-vue-cli-trong-ung-dung-laravel-thay-the-laravel-mix/
1/ php artisan migrate
    SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes
	Solution:
	G:\xampp\htdocs\laravel5.5\app\Providers\AppServiceProvider.php
	
	 add: 
	   use Illuminate\Support\Facades\Schema;
	    public function boot()
		{
			//
			Schema::defaultStringLength(191);
		}
		
		
2/ create :
  a/ install laravel
  composer create-project laravel/laravel my-app
  
  b/ npm install -g vue-cli
  
  c/ vao thu muc goc cua web : vue init webpack resources 
  
	/**
	This will install Vue 2.x version of the template.
 
	For Vue 1.x use: vue init webpack#1.0 resources 
 
	? Project name resources 
	? Project description A Vue.js project for Laravel
	? Author Kien Dang <kiendang@allaravel.com>
	? Vue build standalone
	? Install vue-router? Yes
	? Use ESLint to lint your code? Yes
	? Pick an ESLint preset Standard
	? Setup unit tests with Karma + Mocha? Yes
	? Setup e2e tests with Nightwatch? Yes
 
   vue-cli · Generated "resources".
 
   To get started:
 
     cd resources
     npm install
     npm run dev
	**/
  
  d/ cd resources: 
	npm install
     npm run dev
	 
  e/ mở file package.json và thay đổi chế độ dev thành:
  "dev": "cross-env NODE_ENV=development webpack --watch --progress --colors"
  
  f/resources/config/index.js
  var path = require('path')

	module.exports = {
		build: {
			env: require('./prod.env'),
			index: path.resolve(__dirname, '../views/welcome.blade.php'),
			assetsRoot: path.resolve(__dirname, '../../public'),
  
  g/Ứng dụng đơn trang SPA được xây dựng tất cả các tính năng chỉ trong một trang duy nhất, vì vậy chúng ta cần route toàn bộ các đường dẫn vào view welcome.blade.php
  
  Route::any('{all}', function () {
    return view('welcome');
	})
	->where(['all' => '.*']);
	*****************************************
  
 C2 https://www.itechempires.com/2017/10/laravel-5-5-vuejs-2-0-crud-operations-application/
	1/ install and create data model, controller, route
	a/ install laravel
	composer create-project laravel/laravel my-app
	Connect SQL
	B/ php artisan make:migration create_tasks_table --create=tasks
	C/
	 public function up()
    {
        Schema::create('tasks', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name');
            $table->unsignedInteger('user_id');
            $table->text('description');
            $table->timestamps();
        });
    }
	d/php artisan migrate
	
		SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes (SQL: alter table `users` add unique `users_email_unique`(`email`))
		
		Fix: App/Provider/AppServiceProvider.php 
		use Illuminate\Support\Facades\Schema;

			public function boot()
			{
				Schema::defaultStringLength(191);
			}
	
	
	
	E/php artisan make:auth
	
	F/Create model  && controller
	php artisan make:model Task -r
	
	-Model add :   protected $fillable = [
						'name',
						'user_id',
						'description',
					];
    -controller add : public function __construct()
					{
						$this->middleware('auth');
					}
					
					
					-use Illuminate\Support\Facades\Auth;
	
	g/ /routes/web.php:
		Route::resource('/task', 'TaskController');
		
	2/Create New VueJS Component:
		a/ /resources/assets/js/components/ 
		 add : 
		 <template>
			<div class="container">
				<div class="row">
					<div class="col-md-12">
						<div class="panel panel-default">
							<div class="panel-heading">My Tasks</div>

							<div class="panel-body">

							</div>
						</div>
					</div>
				</div>
			</div>
		</template>

		<script>
			export default {
				mounted() {

				}
			}
		</script>
		
	b//resources/assets/js/app.js
		
	Vue.component('task', require('./components/Task.vue'));
	
	c/  npm install
	   npm run dev
	   
	d/ /resources/views/home.blade.php
	@section('content')
	<task></task>
	@endsection
	
	Step 9: Implement Create Task Operation:
	/resources/assets/js/components/Task.vue:
	<template>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <button @click="initAddTask()" class="btn btn-primary btn-xs pull-right">
                            + Add New Task
                        </button>
                        My Tasks
                    </div>

                    <div class="panel-body">

                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" tabindex="-1" role="dialog" id="add_task_model">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                                aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Add New Task</h4>
                    </div>
                    <div class="modal-body">

                        <div class="alert alert-danger" v-if="errors.length > 0">
                            <ul>
                                <li v-for="error in errors">{{ error }}</li>
                            </ul>
                        </div>

                        <div class="form-group">
                            <label for="name">Name:</label>
                            <input type="text" name="name" id="name" placeholder="Task Name" class="form-control"
                                   v-model="task.name">
                        </div>
                        <div class="form-group">
                            <label for="description">Description:</label>
                            <textarea name="description" id="description" cols="30" rows="5" class="form-control"
                                      placeholder="Task Description" v-model="task.description"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" @click="createTask" class="btn btn-primary">Submit</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->

    </div>
	</template>

	<script>
		export default {
			data(){
				return {
					task: {
						name: '',
						description: ''
					},
					errors: []
				}
			},
			methods: {
				initAddTask()
				{
					this.errors = [];
					$("#add_task_model").modal("show");
				},
				createTask()
				{
					axios.post('/task', {
						name: this.task.name,
						description: this.task.description,
					})
						.then(response => {

							this.reset();

							$("#add_task_model").modal("hide");

						})
						.catch(error => {
							this.errors = [];
							if (error.response.data.errors.name) {
								this.errors.push(error.response.data.errors.name[0]);
							}

							if (error.response.data.errors.description) {
								this.errors.push(error.response.data.errors.description[0]);
							}
						});
				},
				reset()
				{
					this.task.name = '';
					this.task.description = '';
				},
			}
		}
	</script>
	
	b//app/Http/Controllers/TaskController.php:
	    public function store(Request $request)
    {
        $this->validate($request, [
            'name'        => 'required|max:255',
            'description' => 'required',
        ]);

        $task = Task::create([
            'name'        => request('name'),
            'description' => request('description'),
            'user_id'     => Auth::user()->id
        ]);

        return response()->json([
            'task'    => $task,
            'message' => 'Success'
        ], 200);
    }
	
	c/And open TaskController to update index() function:
	
	public function index()
    {
        $tasks = Task::where(['user_id' => Auth::user()->id])->get();
        return response()->json([
            'tasks'    => $tasks,
        ], 200);
    }
	                 -------
	
III/host ao
   -hosts
    127.0.0.1   localhost
	127.0.0.1 	laravel.dev
	127.0.0.1 	laravel.consumer
	
    -C:\xampp\apache\conf\extra\httpd-vhosts.conf
	
	<VirtualHost *:80>
		DocumentRoot "C:/xampp/htdocs/laravel-dev/public"
		ServerName laravel.dev
	</VirtualHost>
	
	<VirtualHost *:80>
		DocumentRoot "C:/xampp/htdocs/laravel-consumer/public"
		ServerName laravel.dev
	</VirtualHost>
	
IV/ Install laravel
  composer create-project laravel/laravel my-app
  //create table 
  php artisan migrate
  $ php artisan serve --port=8001
  
  
  //
  php artisan routes
  
  
  ----------------------install laravel----------------
  https://laravel-news.com/your-first-laravel-application
  https://freetuts.net/su-dung-query-builder-model-trong-laravel-326.html
  
  composer create-project --prefer-dist laravel/laravel blog
  php artisan serve
  http://localhost:8000