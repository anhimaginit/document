 formValidateOption: {
      rules: {
         first_name: { maxlength: 30 },
         middle_name: { maxlength: 30 },
         last_name: { maxlength: 30 },
         primary_street_address1: { maxlength: 254 },
         primary_street_address2: { maxlength: 254 },
         primary_email: {
            required: function () {
               let _phones = $('#contact_form [name="primary_phone"]').val();
               return _phones.length <= 0;
            }, email: true, maxlength: 254,
            remote: {
               url: link._isCheckEmailExisting,
               type: 'post',
               delay: 300,
               data: {
                  token: localStorage.getItemValue('token'),
                  primary_email: function () { return $('#contact_form input[name="primary_email"]').val() },
                  ID: function () { return $('#contact_form input[name="ID"]').val() },
                  jwt: localStorage.getItemValue('jwt'),
                  private_key: localStorage.getItemValue('userID')
               },
               dataFilter: function (data) {
                  let _res = JSON.parse(data);
                  if (_res.existing == true) {
                     $checkEmailDisplay('true', '#contact_form input[name="primary_email"]', _res.ID);
                  } else {
                     $checkEmailDisplay('false', '#contact_form input[name="primary_email"]');
                  }
                  return _res.existing === false;
               }
            }
         },
         primary_phone: {
            remote: {
               url: link._phoneExisting,
               type: 'post',
               delay: 300,
               data: {
                  token: localStorage.getItemValue('token'),
                  primary_phone: function () { return $('#contact_form input[name="primary_phone"]').val() },
                  contactID: function () { return $('#contact_form input[name="ID"]').val() }
               },
               dataFilter: function (data) {
                  let _res = JSON.parse(data);
                  $checkPhoneDisplay('' + _res.existing, '#contact_form input[name="primary_phone"]');
                  return _res.existing === false;
               }
            }
         },
         primary_website: { url: true, maxlength: 254 },
         contact_tags: { maxlength: 5000 },
      },
      messages: {
         primary_email: {
            required: 'Please enter email or phone number',
         }
      },
      success: function (e) {
         $(e).remove();
      },
      submitHandler: function (form) {
         var _f_data = {};
         var _data = $(form).serializeArray()
         _data.forEach(function (elem) {
            if (elem.name != '' && elem.value != '') {
               _f_data[elem.name] = elem.value;
            }
         });

         //get Affiliate
         if ($('#contact_form input[name=contact_type][value="Affiliate"]').prop('checked') == true)
            _f_data.aff_type = ($('#contact_form input[name="affiliate_type"]:checked').map(function (_, el) { return $(el).val(); }).get()).toString();
         //get Vendor
         if ($('#contact_form input[name=contact_type][value="Vendor"]').prop('checked') == true)
            _f_data.V_type = _Contact.getVendor();

         //get Contact Document if the contact is Employee or Vendor

         _f_data.token = localStorage.getItemValue('token');
         _f_data.jwt = localStorage.getItemValue('jwt');
         _f_data.private_key = localStorage.getItemValue('userID');
         _f_data.contact_inactive = $('#contact_form input[name=contact_inactive]').prop('checked') == true ? 1 : 0;

         _f_data.contact_type = ($('#contact_form input[name="contact_type"]:checked').map(function (_, el) { return $(el).val(); }).get()).toString();
         if (window.c_type) {
            _f_data.contact_type = window.c_type;
            if (window.a_type && window.a_type != '') _f_data.aff_type = window.a_type;
         }
         if (!_f_data.contact_type || _f_data.contact_type == '') _f_data.contact_type = 'Policy Holder';
         if (_f_data.contact_type.includes('Sales')) {
            _f_data.area = JSON.stringify($('.salemanState').val());
         }
         //get url:
         {
            var _url_protocol = $('#contact_form #url_protocol').val();
            var _url_host = $('#contact_form #url_host').val();

            if (_url_host) {
               if (_url_host.startsWith('https://') || _url_host.startsWith('http://')) {
                  _f_data.primary_website = _url_host;
               } else {
                  _f_data.primary_website = _url_protocol + _url_host;
               }
            }
         }

         if (_f_data.ID && _f_data.ID != '') {
            _f_data.contactID = _f_data.ID;
         } else {
            delete _f_data.ID;
         }
         //get GPS 
         _f_data.gps = $('#contact_form input[name=gps]').val() != '' ? $('#contact_form input[name=gps]').val() : '{"lat":0,"lng":0}';

         // get contact phone
         if (_contactPhone) {
            _f_data.second_phone = _contactPhone.getSecondaryPhone()
         }

         //
         _f_data.company_name = $('#contact_form [name=company_name]').val();
         _f_data.submit_by = localStorage.getItemValue('userID');

         if (window.location.href.indexOf('contact-form.php') > 0 && undefined != contactDocument) {
            // get contact document
            if (_f_data.contact_type && _f_data.contact_type != '')
               _f_data.contact_doc = contactDocument.getDocuments();

         } else {
            _f_data.contact_doc = [];
            _f_data.notes = [];
         }

         if (_notecontact) {
            _f_data.notes = _notecontact.getNotes();
         }

         let _link = ''
         if (window.location.href.indexOf('contact') > 0 && _f_data.ID) {
            _link = link._contactEdit;
            if (contact_old) {
               var trunk_field = ['doc', 'aff_type', 'V_type', 'notes']
               for (var key in contact_old) {
                  if (_f_data[key] == undefined && trunk_field.includes(key)) {
                     _f_data[key] = contact_old[key];
                  }
               }
            }
            /**
             * add update contact note
             */
            _f_data.notes.push({
               create_date: getDateTime(new Date()),
               note: 'Update contact',
               type: 'Contact',
               contactID: $('#contact_form input[name=ID]').val(),
               enter_by: localStorage.getItemValue('userID'),
            });
         } else {
            _link = link._contactAddNew;
            /**
             * add create new contact note
             */
            _f_data.notes.push({
               create_date: getDateTime(new Date()),
               note: 'Add new contact',
               type: 'Contact',
               enter_by: localStorage.getItemValue('userID'),
            })
         }
         // /**
         //  * Change phone number or
         //  * Delete phone number
         //  */
         // if (contact_old && contact_old.primary_phone && contact_old.primary_phone != '') {
         //    if (!_f_data.primary_phone || _f_data.primary_phone == '') {
         //       _f_data.notes.push({
         //          create_date: getDateTime(),
         //          note: 'Delete Phone Number',
         //          description: 'Remove phone number ' + contact_old.primary_phone + ' by ' + localStorage.getItemValue('user_name'),
         //          type: 'Contact',
         //          contactID: _f_data.ID,
         //          enter_by: localStorage.getItemValue('userID'),
         //          internal_flag: 0,
         //       });
         //    } else if (_f_data.primary_phone != contact_old.primary_phone) {
         //       var tmpInput = $('#table_phone tbody tr:last-child td:first-child input[type="tel"]').val();
         //       if (contact_old.primary_phone != tmpInput) {
         //          _f_data.notes.push({
         //             create_date: getDateTime(),
         //             note: 'Change Phone Number',
         //             description: 'Change phone number from ' + contact_old.primary_phone + ' to ' + _f_data.primary_phone + ' by ' + localStorage.getItemValue('user_name'),
         //             type: 'Contact',
         //             contactID: _f_data.ID,
         //             enter_by: localStorage.getItemValue('userID'),
         //             internal_flag: 0,
         //          });
         //       }

         //    }
         // }

         // delete unused data
         delete _f_data.affiliate_type;
         delete _f_data.user_name;
         delete _f_data.current_password;
         delete _f_data.new_password;
         delete _f_data.confirm_password;
         delete _f_data.password;
         delete _f_data.company_ID;

         $.ajax({
            url: _link,
            type: "POST",
            data: _f_data,
            dataType: 'json',
            success: function (res) {
               if (res.SAVE == 'FAIL') {
                  messageForm('Error! An error occurred. ' + res.ERROR, false)
                  return
               } else if (res.SAVE == 'SUCCESS') {
                  if (window.opener && getUrlParameter('fw')) {
                     window.opener.updateSuccess = true;
                     alert('You have successfully edited the contact');
                     window.close();
                     return;
                  } else if (_link == link._contactAddNew) {
                     if (window.location.href.indexOf('contact') > 0) {
                        alert('You have successfully added the contact');
                        window.location.href += "?id=" + res.ID;
                        location.reload();
                     } else {
                        alert('You have successfully added the contact');
                        if (window.location.href.indexOf('order-form') > 0) {
                           var options = $('[name=bill_to]').prop('options');
                           options[options.length] = new Option(_f_data.first_name + ' ' + _f_data.last_name + ' - ' + _f_data.primary_city + ' - ' + _f_data.primary_state, res.ID);
                           $('[name=bill_to]').val(res.ID).trigger('change');
                           $('.modal').modal('hide');
                        } else if (window.location.href.indexOf('warranty') > 0) {
                           var selectOb = '[name=bill_to]';
                           if (window.c_type_select) {
                              selectOb = '[name="' + window.c_type_select + '"]';
                           }
                           var usedID = res.ID;
                           // if (window.location.href.includes('/warranty-form.php') && getUrlParameter('id')) {
                           //    usedID = res.affilateID;
                           // }
                           // new option text (sometimes, the following fields is null or undefined)
                           var selectText = '';
                           if (_f_data.first_name) selectText += _f_data.first_name + ' ';
                           if (_f_data.last_name) selectText += _f_data.last_name + ' ';
                           if (_f_data.primary_city) selectText += '- ' + _f_data.primary_city + ' ';
                           if (_f_data.primary_state) selectText += '- ' + _f_data.primary_state;
                           if (selectText == '' && _f_data.primary_email) selectText = _f_data.primary_email;
                           if (selectText == '' && _f_data.primary_phone) selectText = _f_data.primary_phone;
                           if (selectText == '') selectText = 'The lastest your created contact';

                           $(selectOb).prepend("<option value='" + usedID + "' selected>" + selectText + "</option>");
                           $(selectOb).trigger('change');
                           $('#contact_form').trigger('reset');
                           $('#contact_form .error').empty();
                           $('#contact_form .postal_code, #contact_form .state, #contact_form .city').val(null).trigger('change');
                           $('.modal').modal('hide');
                        } else {
                           return;
                        }
                     }
                  } else {
                     messageForm('You have successfully edited the contact', true)
                  }
               }
            }
         });
      },
      invalidHandler: function (event, validator) {
         // 'this' refers to the form
         var errors = validator.numberOfInvalids();
         if (errors) {
            console.error(validator);
            return;
         } else {
            $("div.error").hide();
         }
      }
   },